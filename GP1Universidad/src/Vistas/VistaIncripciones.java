/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import entidades.*;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import persistencia.*;
import java.awt.*;
import javax.swing.JOptionPane;

/**
 *
 * @author lucio
 */
public class VistaIncripciones extends javax.swing.JInternalFrame {
    
    private DefaultTableModel modelo = new DefaultTableModel ();
    InscripcionData inscr = new InscripcionData ();
    AlumnoData alum = new AlumnoData ();
    /**
     * Creates new form VistaIncripciones
     */
    public VistaIncripciones() {
        initComponents();
        cabecera ();
        cargarAlumnos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jcbAlumno = new javax.swing.JComboBox<>();
        jrbInscriptas = new javax.swing.JRadioButton();
        jrbNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtInscripciones = new javax.swing.JTable();
        jbInscribirse = new javax.swing.JButton();
        jbAnular = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Inscripcion");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Seleccionar Alumno:");

        jcbAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAlumnoActionPerformed(evt);
            }
        });

        jrbInscriptas.setText("Materia Inscriptas");
        jrbInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbInscriptasActionPerformed(evt);
            }
        });

        jrbNoInscriptas.setText("Materias No Inscriptas");
        jrbNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbNoInscriptasActionPerformed(evt);
            }
        });

        jtInscripciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Materia", "AÃ±o"
            }
        ));
        jScrollPane1.setViewportView(jtInscripciones);

        jbInscribirse.setText("Inscribirse");
        jbInscribirse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirseActionPerformed(evt);
            }
        });

        jbAnular.setText("Anular Inscripcion");
        jbAnular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(143, 143, 143)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jcbAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(90, 90, 90))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(jrbInscriptas)
                        .addGap(115, 115, 115)
                        .addComponent(jrbNoInscriptas))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jbInscribirse)
                        .addGap(107, 107, 107)
                        .addComponent(jbAnular)
                        .addGap(89, 89, 89)
                        .addComponent(jbSalir)))
                .addContainerGap(102, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbInscriptas)
                    .addComponent(jrbNoInscriptas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInscribirse)
                    .addComponent(jbAnular)
                    .addComponent(jbSalir))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrbInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbInscriptasActionPerformed
        // TODO add your handling code here:
         if (jrbInscriptas.isSelected()) {
            
            jrbNoInscriptas.setSelected(false);
        }
         
        materiasInscriptas();

    }//GEN-LAST:event_jrbInscriptasActionPerformed

    private void jrbNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbNoInscriptasActionPerformed
        // TODO add your handling code here:
        if (jrbNoInscriptas.isSelected()) {
            
            jrbInscriptas.setSelected(false);
        }
        
        materiasNoInscriptas ();
    }//GEN-LAST:event_jrbNoInscriptasActionPerformed

    private void jcbAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAlumnoActionPerformed
        // TODO add your handling code here:
        
        //Alumno alumnoSeleccionado = (Alumno)jcbAlumno.getSelectedItem();
        
    }//GEN-LAST:event_jcbAlumnoActionPerformed

    private void jbInscribirseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirseActionPerformed
        // TODO add your handling code here:
        
        inscribir ();
    }//GEN-LAST:event_jbInscribirseActionPerformed

    private void jbAnularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularActionPerformed
        // TODO add your handling code here:
        anularInscripcion();
    }//GEN-LAST:event_jbAnularActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose ();
    }//GEN-LAST:event_jbSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAnular;
    private javax.swing.JButton jbInscribirse;
    private javax.swing.JButton jbSalir;
    private javax.swing.JComboBox<Object> jcbAlumno;
    private javax.swing.JRadioButton jrbInscriptas;
    private javax.swing.JRadioButton jrbNoInscriptas;
    private javax.swing.JTable jtInscripciones;
    // End of variables declaration//GEN-END:variables

    private void cabecera (){
        
        modelo.addColumn("Id Materia");
        modelo.addColumn("Nombre");
        modelo.addColumn("AÃ±o");
        jtInscripciones.setModel(modelo);
        jtInscripciones.setDefaultEditor(Object.class, null);
    }

    private void cargarAlumnos(){
        
        List <Alumno> alumnos = alum.listarAlumnos();
        
        
        for (Alumno a: alumnos) {
            
            jcbAlumno.addItem(a);
        }
    }
    private void limpiarTabla (){
        
        modelo.setRowCount(0);
    }
    
    private void materiasInscriptas (){
        
        limpiarTabla ();
        Alumno alumno = (Alumno) jcbAlumno.getSelectedItem();
        
        if (alumno != null) {
            
            List <Materia> materias = inscr.ObtenerMateriaCursadas(alumno.getId_alunmo());
            
            for (Materia m : materias) {

                modelo.addRow(new Object []
                        
                { m.getIdMateria(), m.getNombre(), m.getAnio()});
                
            }
        }
    }
    
    private void materiasNoInscriptas (){
        
        limpiarTabla ();
        Alumno alumno = (Alumno) jcbAlumno.getSelectedItem();
        if (alumno != null) {
            
            List <Materia> materias = inscr.ObtenerMateriaNOcursadas(alumno.getId_alunmo());
            
            for (Materia m : materias) {
                
                modelo.addRow(new Object [] 
                {m.getIdMateria(), m.getNombre(), m.getAnio() });
            }
        }
    }
    
    private void inscribir (){
        
        int fila = jtInscripciones.getSelectedRow();
        if (fila != -1) {
            
            Alumno alumno = (Alumno) jcbAlumno.getSelectedItem();
            
            int idMateria = (int) jtInscripciones.getValueAt(fila, 0) ;
                        
            inscr.guardarInscripcion(alumno.getId_alunmo(), idMateria);
            
            JOptionPane.showMessageDialog(this, "Inscripcion realizada con exito.");
            
            materiasNoInscriptas();
            
        } else {
            
            JOptionPane.showMessageDialog(this, "Seleccione una materia para inscribir.");
        }
    }
    
    private void anularInscripcion (){
        
        int fila = jtInscripciones.getSelectedRow();
        if (fila != -1) {
            
            Alumno alumno = (Alumno) jcbAlumno.getSelectedItem();
            
            int idMateria = (int) jtInscripciones.getValueAt(fila, 0);
            
            inscr.borrarInscripcionMateriaAlumno(alumno.getId_alunmo(), idMateria);
            
            JOptionPane.showMessageDialog(this, "Inscripcion anulada con exito.");
            
            materiasInscriptas();
        } else {
            
            JOptionPane.showMessageDialog(this, "Seleccione una materia para anular.");
        }
    }
}


